{"version":3,"sources":["logo.svg","Static/Icons/start2.png","Static/Icons/start.png","Static/Icons/airplane.png","components/Tarea.js","App.js","reportWebVitals.js","index.js"],"names":["generateRandomColor","options","color","Math","floor","random","length","FlightIcon","L","icon","iconUrl","airplane","shadowUrl","iconAnchor","shadowSize","shadowAnchor","iconSize","StartIcon","start","FinishIcon","finish","socket","io","path","columns","Header","accessor","emit","Tarea","useState","flights","setFlights","colu","mensaje","setMensaje","mensajes","setMensajes","positions","setPositions","name","setName","on","accion","vuelos","i","nombres","j","passengers","push","diccc","code","airline","origin","destination","plane","seats","join","useEffect","newInfo","currentData","message","date","Date","toLocaleString","prevState","position","submit","e","a","preventDefault","nameset","className","rel","class","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","location","Marker","Polyline","pathOptions","Object","keys","key","index","Popup","k","src","alt","onSubmit","type","onChange","target","value","h","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b6cf9dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/start2.706faed1.png\";","export default __webpack_public_path__ + \"static/media/start.c6210857.png\";","export default __webpack_public_path__ + \"static/media/airplane.7e62ba1b.png\";","import React, { Component } from 'react';\nimport L from 'leaflet';\nimport {\n    MapContainer, TileLayer, Marker, Popup, Polyline\n} from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css';\nimport io from 'socket.io-client';\nimport ReactDOM from 'react-dom';\nimport { useEffect, useState, useRef } from 'react';\n\nimport finish from '../Static/Icons/start2.png';\nimport start from '../Static/Icons/start.png';\nimport airplane from '../Static/Icons/airplane.png';\n\nfunction generateRandomColor() {\n  var options = [{ color: 'black' },{ color: 'red' },{ color: 'blue' },{ color: 'yellow' },\n  { color: 'green' },{ color: 'purple' },{ color: 'orange' },{ color: 'lime' }]\n  var color = options[Math.floor(Math.random() * options.length)];\n  return color;\n}\n\nlet FlightIcon = L.icon({\n    iconUrl: airplane,\n    shadowUrl: null,\n    iconAnchor: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    iconSize: [50,50],\n});\n\nlet StartIcon = L.icon({\n    iconUrl: start,\n    shadowUrl: null,\n    iconAnchor: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    iconSize: [20,20],\n});\n\nlet FinishIcon = L.icon({\n    iconUrl: finish,\n    shadowUrl: null,\n    iconAnchor: null,\n    shadowSize: null,\n    shadowAnchor: null,\n    iconSize: [35,35],\n});\n\nvar socket = io('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n    path: '/flights'\n  });\n\nconst columns = [{\n    Header: 'Code',\n    accessor: 'code'\n}, {\n    Header: 'Airline',\n    accessor: 'airline'\n}, {\n    Header: 'Plane',\n    accessor: 'plane'\n}, {\n    Header: 'Seats',\n    accessor: 'seats'\n}, {\n    Header: 'Passengers',\n    accessor: 'passengers'\n}];\n\nsocket.emit('FLIGHTS');\n\nconst Tarea = () => {\n\n    const [flights, setFlights] = useState([]);\n    const [colu, setColu] = useState(columns);\n    const [mensaje, setMensaje] = useState(\"\");\n    const [mensajes, setMensajes] = useState([]);\n    const [positions, setPositions] = useState({});\n    const [name, setName] = useState(\"anonymus\");\n    const [render, setRender] = useState(\"\");\n\n    socket.on('FLIGHTS', accion => {\n        var vuelos = [];\n        for (var i = 0; i < accion.length; i++) {\n            var nombres = [];\n            for (var j = 0; j < accion[i].passengers.length; j++) {\n                nombres.push(accion[i].passengers[j].name);\n            }\n            var diccc = {code: accion[i].code, airline: accion[i].airline, origin: accion[i].origin, destination: accion[i].destination,\n            plane: accion[i].plane, seats: accion[i].seats, passengers: nombres.join(\", \"), color: generateRandomColor()};\n            vuelos.push(diccc);\n        }\n        setFlights(vuelos);\n    });\n\n    // Escuchamos por un evento y actualizamos informaciÃ³n en caso necesario\n    useEffect(() => {\n        socket.on('CHAT', newInfo => {\n            setMensajes(currentData => [...currentData, {name:newInfo.name, message:newInfo.message, date: (new Date(newInfo.date).toLocaleString())}]);\n        });\n\n        socket.on('POSITION', newInfo => {\n            setPositions(prevState => ({\n                ...prevState,\n                [newInfo.code]: newInfo.position\n            }));\n        });\n    },[]);\n\n    const position = [1.35, 103.8];\n\n    const submit = async (e) => {\n        e.preventDefault();\n        socket.emit(\"CHAT\", { name:name, message:mensaje });\n        setMensaje(\"\");\n    };\n    const nameset = async (e) => {\n        e.preventDefault();\n    };\n\n    return (\n\n    <div className=\"App\">\n      <link rel=\"stylesheet\"></link>\n    <div>\n    <h2>MAP</h2>\n    <div class=\"map\">\n     <MapContainer center={position} zoom={2} scrollWheelZoom={false}>\n        <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {flights.map((location) => (\n            <div>\n                <Marker\n                position={location.origin}\n                icon={StartIcon}\n                >\n                </Marker>\n                <Marker\n                position={location.destination}\n                icon={FinishIcon}\n                >\n                </Marker>\n                <Polyline pathOptions={location.color} positions={[location.origin, location.destination]} />\n\n            </div>\n        ))}\n        <div>\n        {\n            Object.keys(positions).map((key, index) => (\n                <div>\n                    <Marker\n                    position={positions[key]}\n                    icon={FlightIcon}\n                    >\n                    <Popup>\n                        <p>{key}</p>\n                    </Popup>\n                    </Marker>\n\n                </div>\n            ))\n        }\n        </div>\n     </MapContainer>\n     </div>\n\n    <br></br>\n\n    <h2>CHAT</h2>\n    <div  class=\"chat\">\n        {mensajes.map((k, i) => {\n                return (\n                    <div class=\"container\">\n                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/12/User_icon_2.svg\" alt=\"Avatar\"></img>\n                            <p>{k.name}</p>\n                            <p>{k.message}</p>\n                        <span class=\"time-right\">{k.date}</span>\n                    </div>\n                );\n            })}\n    </div>\n\n    <div>\n        <form onSubmit={submit}>\n            <input type=\"text\" onChange={(e) => setMensaje(e.target.value)}/>\n            <button>Send</button>\n        </form>\n    </div>\n    <div>\n        <form onSubmit={nameset}>\n            <input type=\"text\" onChange={(h) => setName(h.target.value)}/>\n            <button>Set Username</button>\n        </form>\n    </div>\n\n    <div class=\"clearfix\"></div>\n\n    <br></br>\n    \n    <h2>FLIGHTS</h2>\n\n    <div class=\"vuelos\">\n    <table id=\"flights\">\n        <thead>\n        <tr>{colu.map((h, i) => <th key={i}>{h.Header}</th>)}</tr>\n        </thead>\n        <tbody>\n        {flights.map((k, i) => {\n            return (\n            <tr key={i}>\n                <td>{k.code}</td>\n                <td>{k.airline}</td>\n                <td>{k.plane}</td>\n                <td>{k.seats}</td>\n                <td>{k.passengers}</td>\n            </tr>\n            );\n        })}\n        </tbody>\n    </table>\n    </div>\n        \n        \n        </div>\n    </div>\n  );\n}\n\nexport default Tarea;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nimport Tarea from './components/Tarea.js';\n\n\nfunction App() {\n  return (\n    <Tarea/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}